buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
}

plugins {
    id 'java'
    id("io.github.goooler.shadow") version "8.1.7"
    id("io.papermc.paperweight.userdev") version "1.7.5"
}

apply plugin: 'java'

group = 'club.hellin'
version = '1.1.12-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "jitpack.io"
        url = "https://jitpack.io"
    }
    maven { url "https://repo.codemc.org/repository/maven-public/" }
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.20.6-R0.1-SNAPSHOT")
    paperweight.paperDevBundle("1.20.6-R0.1-SNAPSHOT")
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    implementation "de.tr7zw:item-nbt-api:2.15.2"
    implementation files("C:\\Users\\josep\\Desktop\\Minigames\\drink\\target\\drink-1.0.5-shaded.jar")
    implementation "com.github.Exlll.ConfigLib:configlib-core:v4.2.0"
    implementation "com.github.Exlll.ConfigLib:configlib-paper:v4.2.0"
    implementation "com.github.Exlll.ConfigLib:configlib-yaml:v4.2.0"
    compileOnly "com.github.decentsoftware-eu:decentholograms:2.8.13"
    implementation group: 'org.json', name: 'json', version: '20240303'
    compileOnly 'me.clip:placeholderapi:2.11.6'
    implementation 'com.github.Metaphoriker.pathetic:pathetic-bukkit:4.0.1'
    implementation "commons-codec:commons-codec:1.15"
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.14.1'
}

shadowJar {
    relocate 'de.tr7zw.changeme.nbtapi', 'club.hellin.forceblocks.de.tr7zw.3_0_0.nbtapi'

    minimize()
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion.set(JavaLanguageVersion.of(targetJavaVersion))
//        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks.assemble {
    dependsOn(tasks.reobfJar)  // Ensure reobfJar runs during the build process
}